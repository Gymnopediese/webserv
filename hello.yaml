conf:
  port: 4242
  host: localhost
  root: ./conf
  client_max_body_size: 10g
  cgi:
    php:
      extentions: .php .hph .phpello
      path: /opt/homebrew/bin/php-cgi
    python:
      extentions: .py .pypy
      path: /opt/homebrew/bin/python3
    user1:
      extentions: .cpp
      path: /opt/homebrew/bin/python3
    user2:
      extentions: .cpp
      path: /opt/homebrew/bin/python3
  error:
    404: /404.html
    405: /50x.html
  location: /
    index: /index.html

  location: /instagram
    return:
      all: 302 https://www.instagram.com/


conf:
  port: 4242
  host: albaud.42.ch www.albaud.42.ch 127.0.0.1
  root: ./conf2
  client_max_body_size: 10g
  cgi:
    php:
      extentions: .php .hph .phpello
      path: /opt/homebrew/bin/php-cgi
    python:
      extentions: .py .pypy
      path: /opt/homebrew/bin/python3
    user1:
      extentions: .cpp
      path: /opt/homebrew/bin/python3
    user2:
      extentions: .cpp
      path: /opt/homebrew/bin/python3
  error:
    404: /404.html
    405: /50x.html
  location: /
    # tryfile: on
    index: /index.html
  location: /test
    index: /index.html
  location: /pong
    alias: /website
  location: /website
    autoindex: on
  location: /database
    index: /index.html
  location: /post
    allow: post get
    deny: all
    types: application/zip
    return:
      all: 200 /post/login.html

  



# Dans ce fichier de configuration, vous devez pouvoir :
# • Choisir le port et l’host de chaque "serveur".
# • Setup server_names ou pas.
# • Le premier serveur pour un host:port sera le serveur par défaut pour cet host:port
# (ce qui signifie qu’il répondra à toutes les requêtes qui n’appartiennent pas à un
# autre serveur).
# • Setup des pages d’erreur par défaut.
# • Limiter la taille du body des clients.
# • Setup des routes avec une ou plusieurs des règles/configurations suivantes (les
# routes n’utiliseront pas de regexp) :
# ◦ Définir une liste de méthodes HTTP acceptées pour la route.
# ◦ Définir une redirection HTTP.
# ◦ Définir un répertoire ou un fichier à partir duquel le fichier doit être recherché
# (par exemple si l’url /kapouet est rootée sur /tmp/www, l’url /kapouet/pouic/toto/pouet
# est /tmp/www/pouic/toto/pouet).
# ◦ Activer ou désactiver le listing des répertoires.
# ◦ Set un fichier par défaut comme réponse si la requête est un répertoire.
# ◦ Exécuter CGI en fonction de certaines extensions de fichier (par exemple .php).
# ◦ Faites-le fonctionner avec les méthodes POST et GET.
# ◦ Rendre la route capable d’accepter les fichiers téléchargés et configurer où cela
# doit être enregistré.
# — Vous vous demandez ce qu’est un CGI ?
# — Parce que vous n’allez pas appeler le CGI mais utiliser directement le chemin
# complet comme PATH_INFO.
# — Rappelez-vous juste que, pour les requêtes fragmentées, votre serveur a
# besoin de la découper, le CGI attendra un EOF à la fin du body.
# — Même choses pour la sortie du CGI. Si aucun content_length n’est renvoyé
# par le CGI, EOF signifiera la fin des données renvoyées.
# — Votre programme doit appeler le CGI avec le fichier demandé comme premier
# argument.
# — Le CGI doit être exécuté dans le bon répertoire pour l’accès au fichier de
# chemin relatif.
# — votre serveur devrait fonctionner avec un seul CGI (php-CGI, Python, etc.).
# Vous devez fournir des fichiers de configuration et des fichiers de base par défaut pour
# tester et démontrer que chaque fonctionnalité fonctionne pendant l’évaluation.